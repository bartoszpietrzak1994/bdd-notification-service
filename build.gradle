plugins {
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'pl.allegro.tech.build.axion-release' version '1.13.1'
    id 'java'
    id 'maven-publish'
}

version = scmVersion.version
sourceCompatibility = '11'

allprojects {
    project.version = scmVersion.version
    group = 'org.bdd'
    repositories {
        mavenCentral()
    }
}

dependencies {
    implementation project(':notification-service-client')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.2'
    implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.13.2'
    testCompile 'io.cucumber:cucumber-java:6.9.0'
    testCompile 'io.cucumber:cucumber-junit:6.6.1'
    testCompile 'io.cucumber:cucumber-spring:6.9.0'
    testCompile 'junit:junit:4.12',
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.18.1'
    annotationProcessor "org.projectlombok:lombok"

    implementation "org.mapstruct:mapstruct:1.4.1.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.1.Final"
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

tasks.withType(Test) {
    dependsOn cleanTest
    testLogging {
        showStandardStreams = true
    }
    systemProperties System.properties
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
    ]
}

publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/bartoszpietrzak1994/bdd-notification-service")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}